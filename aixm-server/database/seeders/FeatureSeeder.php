<?php

namespace Database\Seeders;

use App\Models\Aixm\Feature;
use Illuminate\Database\Console\Seeds\WithoutModelEvents;
use Illuminate\Database\Seeder;

class FeatureSeeder extends Seeder
{
    /**
     * Run the database seeds.
     */
    public function run(): void
    {
        Feature::create(['name'=>'AerialRefuelling', 'type'=>'feature', 'abbreviation'=>'ARF', 'prefix'=>'aixm', 'description'=>'A procedure used by the military to transfer fuel from one aircraft to another during flight.']);
        Feature::create(['name'=>'AerialRefuellingAnchor', 'type'=>'object', 'abbreviation'=>'ARA', 'prefix'=>'aixm', 'description'=>'A prescribed pattern, established by air refuelling points, along which air-to-air refuelling of aircraft is performed.']);
        Feature::create(['name'=>'AerialRefuellingPoint', 'type'=>'object', 'abbreviation'=>'ARP', 'prefix'=>'aixm', 'description'=>'A geographic position or radio navigation fix along an air refuelling anchor pattern or air refuelling track.']);
        Feature::create(['name'=>'AerialRefuellingTrack', 'type'=>'object', 'abbreviation'=>'ART', 'prefix'=>'aixm', 'description'=>'A sequence of points that define the trajectory to be flown during an aerial refuelling operation.']);
        Feature::create(['name'=>'AeronauticalGroundLight', 'type'=>'feature', 'abbreviation'=>'AGL', 'prefix'=>'aixm', 'description'=>'A light specifically provided as an aid to air navigation, with the exception of obstacle lights and lights forming part of surface or approach lighting systems']);
        Feature::create(['name'=>'AircraftCharacteristic', 'type'=>'object', 'abbreviation'=>'ACH', 'prefix'=>'aixm', 'description'=>'A specific aircraft type, such as airplane, balloon, helicopter, etc., and/or having specific equipment (certification), such as RNAV or RVSM.']);
        Feature::create(['name'=>'AircraftGroundService', 'type'=>'feature', 'abbreviation'=>'ACG', 'prefix'=>'aixm', 'description'=>'A kind of maintenance, support or supply service provided to aircraft at the ground. Note: instances should be grouped by provider (associated Unit)']);
        Feature::create(['name'=>'AircraftStand', 'type'=>'feature', 'abbreviation'=>'AST', 'prefix'=>'aixm', 'description'=>'A designated area on an apron intended to be used for parking an aircraft.']);
        Feature::create(['name'=>'AircraftStandContamination', 'type'=>'object', 'abbreviation'=>'ASC', 'prefix'=>'aixm', 'description'=>'The presence or removal of hazardous conditions due to snow, ice, slush, water, etc. at an AircraftStand.']);
        Feature::create(['name'=>'AirportClearanceService', 'type'=>'feature', 'abbreviation'=>'ACS', 'prefix'=>'aixm', 'description'=>'A kind of service that provides clearance capabilities for airport surfaces.']);
        Feature::create(['name'=>'AirportGroundService', 'type'=>'feature', 'abbreviation'=>'AGS', 'prefix'=>'aixm', 'description'=>'Services that provide maintenance of the airport infrastructure and direct support to aircraft on the ground.']);
        Feature::create(['name'=>'AirportHeliport', 'type'=>'feature', 'abbreviation'=>'AHP', 'order'=>2, 'prefix'=>'aixm', 'description'=>'A defined area on land or water (including any buildings, installations and equipment) intended to be used either wholly or in part for the arrival, departure and surface movement of aircraft/helicopters.']);
        Feature::create(['name'=>'AirportHeliportAvailability', 'type'=>'object', 'abbreviation'=>'AHY', 'prefix'=>'aixm', 'description'=>'Information about the operational status of the airport/heliport.']);
        Feature::create(['name'=>'AirportHeliportCollocation', 'type'=>'feature', 'abbreviation'=>'AHC', 'prefix'=>'aixm', 'description'=>'Two aerodromes/heliports may be co-located sharing some or all of their ground facilities. E.g. a civil and a military aerodrome using the same runway.']);
        Feature::create(['name'=>'AirportHeliportContamination', 'type'=>'object', 'abbreviation'=>'AHN', 'prefix'=>'aixm', 'description'=>'The presence or removal of hazardous conditions due to snow, ice, slush, water, etc. on the airport surfaces.']);
        Feature::create(['name'=>'AirportHeliportProtectionArea', 'type'=>'feature', 'abbreviation'=>'APA', 'prefix'=>'aixm', 'description'=>'An area situated in the vicinity of a runway, FATO or TLOF, provided to protect aircraft during manoeuvring, take-off and/or landing operations.']);
        Feature::create(['name'=>'AirportHeliportResponsibilityOrganisation', 'type'=>'object', 'abbreviation'=>'AHR', 'prefix'=>'aixm', 'description'=>'[Association Class] - Characterises the role of the organisation or authority which is responsible for the AirportHeliport']);
        Feature::create(['name'=>'AirportHeliportUsage', 'type'=>'object', 'abbreviation'=>'AHU', 'prefix'=>'aixm', 'description'=>'A rule governing the usage of an AirportHeliport.']);
        Feature::create(['name'=>'AirportHotSpot', 'type'=>'feature', 'abbreviation'=>'AHT', 'prefix'=>'aixm', 'description'=>'A location on aerodrome movement area with a history or potential risk of collision or runway incursion, and where heightened attention by pilots/drivers is necessary.']);
        Feature::create(['name'=>'AirportProtectionAreaMarking', 'type'=>'feature', 'abbreviation'=>'APM', 'prefix'=>'aixm', 'description'=>'A symbol or group of symbols displayed on the edge of the landing protection area.']);
        Feature::create(['name'=>'AirportSuppliesService', 'type'=>'feature', 'abbreviation'=>'ASV', 'prefix'=>'aixm', 'description'=>'A kind of service that provides supplies (fuel, oil, oxygen, etc.) to aircraft. Note: instances should be grouped by provider (associated Unit)']);
        Feature::create(['name'=>'Airspace', 'type'=>'feature', 'abbreviation'=>'ASE', 'order'=>4, 'prefix'=>'aixm', 'description'=>'A defined three dimensional region of space relevant to air traffic.']);
        Feature::create(['name'=>'AirspaceActivation', 'type'=>'object', 'abbreviation'=>'AAC', 'prefix'=>'aixm', 'description'=>'Information about the operational status of the airspace.']);
        Feature::create(['name'=>'AirspaceBorderCrossing', 'type'=>'feature', 'abbreviation'=>'ABC', 'prefix'=>'aixm', 'description'=>'A type of traffic flow condition element which consist of crossing the common border between two adjacent airspace, when flying directly from one airspace into the other airspace.']);
        Feature::create(['name'=>'AirspaceGeometryComponent', 'type'=>'object', 'abbreviation'=>'AGC', 'prefix'=>'aixm', 'description'=>'[Association Class] - The role of the component in the airspace geometry. If the geometry of an airspace is composed of single volume, then the attributes of this association class may be left empty.']);
        Feature::create(['name'=>'AirspaceLayer', 'type'=>'object', 'abbreviation'=>'ALR', 'prefix'=>'aixm', 'description'=>'The portion of airspace between two specified vertical levels.']);
        Feature::create(['name'=>'AirspaceLayerClass', 'type'=>'object', 'abbreviation'=>'ALC', 'prefix'=>'aixm', 'description'=>'The airspace class for an airspace level block.']);
        Feature::create(['name'=>'AirspaceVolume', 'type'=>'object', 'abbreviation'=>'AVL', 'prefix'=>'aixm', 'description'=>'A defined volume in the air, described as horizontal projection with vertical limits.']);
        Feature::create(['name'=>'AirspaceVolumeDependency', 'type'=>'object', 'abbreviation'=>'AVD', 'prefix'=>'aixm', 'description'=>'[Association Class] - An association class that defines the dependency between the geometry of an AirspaceVolume and the geometry of another (parent) Airspace.']);
        Feature::create(['name'=>'AirTrafficControlService', 'type'=>'feature', 'abbreviation'=>'ATC', 'prefix'=>'aixm', 'description'=>'A kind of service that provides control and separation services to aircraft in the air.']);
        Feature::create(['name'=>'AirTrafficManagementService', 'type'=>'feature', 'abbreviation'=>'ATM', 'prefix'=>'aixm', 'description'=>'A kind of service that provides flight planning and flow management operations.']);
        Feature::create(['name'=>'AltimeterSource', 'type'=>'feature', 'abbreviation'=>'ALT', 'prefix'=>'aixm', 'description'=>'An instrument that measures and indicates the elevation at which an object, such as an airplane, is located']);
        Feature::create(['name'=>'AltimeterSourceStatus', 'type'=>'object', 'abbreviation'=>'ASS', 'prefix'=>'aixm', 'description'=>'Information about the operational status of an Altimeter Source.']);
        Feature::create(['name'=>'AltitudeAdjustment', 'type'=>'object', 'abbreviation'=>'AAD', 'prefix'=>'aixm', 'description'=>'Operational factors applied to obstacle clearance altitudes to produce the safest usable altitude.']);
        Feature::create(['name'=>'AngleIndication', 'type'=>'feature', 'abbreviation'=>'AIN', 'prefix'=>'aixm', 'description'=>'An angular reference from a navaid or with reference to a designated point.']);
        Feature::create(['name'=>'AngleUse', 'type'=>'object', 'abbreviation'=>'AUS', 'prefix'=>'aixm', 'description'=>'[Association Class] - Indicates the role of the AngleIndication in the PointReference (for example, along track versus intersecting).']);
        Feature::create(['name'=>'ApproachAltitudeTable', 'type'=>'object', 'abbreviation'=>'AAT', 'prefix'=>'aixm', 'description'=>'Other altitudes (not defined by a segment) that are to be depicted on the profile view, such as HAT for ILS CAT II approaches.']);
        Feature::create(['name'=>'ApproachCondition', 'type'=>'object', 'abbreviation'=>'ACN', 'prefix'=>'aixm', 'description'=>'The final approach condition that must be met to use the set of minima. For example, straight in approach to runway 9R Localizer only. (S-LOC 9R) (circling 8,16)']);
        Feature::create(['name'=>'ApproachDistanceTable', 'type'=>'object', 'abbreviation'=>'ADT', 'prefix'=>'aixm', 'description'=>'Other distances (not defined by a segment) that are to be depicted on the profile view, such as HAT for ILS CAT II approaches.']);
        Feature::create(['name'=>'ApproachLeg', 'type'=>'feature', 'abbreviation'=>'ALG', 'prefix'=>'aixm', 'description'=>'A portion of a terminal approach procedure as defined by two consecutive significant points.']);
        Feature::create(['name'=>'ApproachLightingSystem', 'type'=>'feature', 'abbreviation'=>'APL', 'prefix'=>'aixm', 'description'=>'An airport lighting facility which provides visual guidance to landing aircraft by radiating light beams in a directional pattern by which the pilot aligns the aircraft with the final approach path for landing.']);
        Feature::create(['name'=>'ApproachTimingTable', 'type'=>'object', 'abbreviation'=>'ATT', 'prefix'=>'aixm', 'description'=>'Table of timings usually between final approach fix and the missed approach point.']);
        Feature::create(['name'=>'Apron', 'type'=>'feature', 'abbreviation'=>'APN', 'prefix'=>'aixm', 'description'=>'A defined area, on a land aerodrome/heliport, intended to accommodate aircraft/helicopters for purposes of loading and unloading passengers, mail or cargo, and for fuelling, parking or maintenance.']);
        Feature::create(['name'=>'ApronAreaAvailability', 'type'=>'object', 'abbreviation'=>'AAA', 'prefix'=>'aixm', 'description'=>'Information about the operational status of an element situated in the apron area.']);
        Feature::create(['name'=>'ApronAreaUsage', 'type'=>'object', 'abbreviation'=>'AAU', 'prefix'=>'aixm', 'description'=>'A rule governing the usage of an element situated in the apron area.']);
        Feature::create(['name'=>'ApronContamination', 'type'=>'object', 'abbreviation'=>'ACT', 'prefix'=>'aixm', 'description'=>'The presence or removal of hazardous conditions due to snow, ice, slush, water, etc. on the Apron surface.']);
        Feature::create(['name'=>'ApronElement', 'type'=>'feature', 'abbreviation'=>'AEL', 'prefix'=>'aixm', 'description'=>'Parts of a defined apron area. ApronElements may have functional characteristics defined in the ApronElement type. ApronElements may have jetway, fuel, towing, docking and groundPower services.']);
        Feature::create(['name'=>'ApronLightSystem', 'type'=>'feature', 'abbreviation'=>'ALS', 'prefix'=>'aixm', 'description'=>'The lighting system provided for an apron.']);
        Feature::create(['name'=>'ApronMarking', 'type'=>'feature', 'abbreviation'=>'AMK', 'prefix'=>'aixm', 'description'=>'A symbol or group of symbols displayed on the surface of the apron.']);
        Feature::create(['name'=>'ArrestingGear', 'type'=>'feature', 'abbreviation'=>'AGR', 'prefix'=>'aixm', 'description'=>'A series of devices, namely engaging or catching devices and energy absorption devices used to stop an aircraft by absorbing its momentum in a routine, emergency landing or aborted take-off.']);
        Feature::create(['name'=>'ArrestingGearExtent', 'type'=>'choice', 'abbreviation'=>'AGE', 'prefix'=>'aixm', 'description'=>'A link class that allows selecting between a point, a curve or a surface to define the geometry of an ArrestingGear']);
        Feature::create(['name'=>'ArrivalFeederLeg', 'type'=>'feature', 'abbreviation'=>'AFL', 'prefix'=>'aixm', 'description'=>'A type of SegmentLeg designed in accordance with the rules for arrival feeder segments having the properties specific to a arrival feeder approach segment.']);
        Feature::create(['name'=>'ArrivalLeg', 'type'=>'feature', 'abbreviation'=>'ARL', 'prefix'=>'aixm', 'description'=>'A portion of an arrival procedure (STAR) as defined by two consecutive significant points.']);
        Feature::create(['name'=>'AuthorityForAerialRefuelling', 'type'=>'object', 'abbreviation'=>'AAR', 'prefix'=>'aixm', 'description'=>'[Association Class] - Provides details about the kind of authority that the Organisation has over the Aerial Refuelling route.']);
        Feature::create(['name'=>'AuthorityForAirspace', 'type'=>'feature', 'abbreviation'=>'AFA', 'prefix'=>'aixm', 'description'=>'The responsibility that one organisation has for an airspace. Description: For example, this entity will indicate which State is de jure and which State is de facto responsible for the airspace.']);
        Feature::create(['name'=>'AuthorityForNavaidEquipment', 'type'=>'object', 'abbreviation'=>'AFN', 'prefix'=>'aixm', 'description'=>'[Association Class] - Provides details about the level of responsibility of an OrganisationAuthority for a Navaid Equipment.']);
        Feature::create(['name'=>'AuthorityForSpecialNavigationStation', 'type'=>'object', 'abbreviation'=>'ASN', 'prefix'=>'aixm', 'description'=>'[Association Class] - Provides details about the level of responsibility of an OrganisationAuthority for a Special Navigation System Station.']);
        Feature::create(['name'=>'AuthorityForSpecialNavigationSystem', 'type'=>'object', 'abbreviation'=>'ASM', 'prefix'=>'aixm', 'description'=>'[Association Class] - Provides details about the level of responsibility of an OrganisationAuthority for a Special Navigation System.']);
        Feature::create(['name'=>'Azimuth', 'type'=>'feature', 'abbreviation'=>'AZM', 'prefix'=>'aixm', 'description'=>'A component of an MLS consisting of an SHF transmitter and associated equipment, radiating signals in a volume of airspace served by the MLS, thereby furnishing azimuth indications to aircraft approaching the runway or back azimuth indications to aircraft departing from the runway or performing a missed approach procedure.']);
        Feature::create(['name'=>'CallsignDetail', 'type'=>'object', 'abbreviation'=>'CDL', 'prefix'=>'aixm', 'description'=>'Information about the operational identifier by which the provider of the service is called and the language used.']);
        Feature::create(['name'=>'ChangeOverPoint', 'type'=>'feature', 'abbreviation'=>'COP', 'prefix'=>'aixm', 'description'=>'The distance from the start of the route portion to the position where change over occurs for VOR defined routes.']);
        Feature::create(['name'=>'CheckpointINS', 'type'=>'feature', 'abbreviation'=>'CNS', 'prefix'=>'aixm', 'description'=>'A point established to test the Inertial Navigation System in the aircraft.']);
        Feature::create(['name'=>'CheckpointVOR', 'type'=>'feature', 'abbreviation'=>'CVO', 'prefix'=>'aixm', 'description'=>'A VOR test transmits a test signal used to determine the accuracy of a VOR receiver on the ground or airborne.']);
        Feature::create(['name'=>'CircleSector', 'type'=>'object', 'abbreviation'=>'CIS', 'prefix'=>'aixm', 'description'=>'A group of properties that help describe a 3D pattern based on start angle, stop angle, inner distance, outer distance and upper/lower altitude.']);
        Feature::create(['name'=>'CirclingArea', 'type'=>'feature', 'abbreviation'=>'CIA', 'prefix'=>'aixm', 'description'=>'[FAA 8260.3] The area in which aircraft circle to land under visual conditions after completing an instrument landing approach.']);
        Feature::create(['name'=>'CirclingRestriction', 'type'=>'object', 'abbreviation'=>'CIR', 'prefix'=>'aixm', 'description'=>'Describes a (sub)sector used to restrict flight within a circling area.']);
        Feature::create(['name'=>'City', 'type'=>'object', 'abbreviation'=>'CTY', 'prefix'=>'aixm', 'description'=>'A city or location that may be served by an airport/heliport.']);
        Feature::create(['name'=>'ConditionCombination', 'type'=>'object', 'abbreviation'=>'CCN', 'prefix'=>'aixm', 'description'=>'A set of filter criteria used to determine the subset of flights, environmental conditions and times for which the usage is specified.']);
        Feature::create(['name'=>'ContactInformation', 'type'=>'object', 'abbreviation'=>'CIN', 'prefix'=>'aixm', 'description'=>'Information required to enable contact with the responsible person and/or organisation. This model is derived from ISO19115-2003:Geographic Information- Metadata']);
        Feature::create(['name'=>'Curve', 'type'=>'object', 'abbreviation'=>'CUR', 'prefix'=>'aixm', 'description'=>'An AIXM curve derived from GM_Curve and extended to include Horizontal Accuracy Properties']);
        Feature::create(['name'=>'DeicingArea', 'type'=>'feature', 'abbreviation'=>'DAA', 'prefix'=>'aixm', 'description'=>'An area comprising an inner area for the parking of an aircraft to receive de-icing treatment and an outer area for the manoeuvring of two or more mobile de-icing equipment.']);
        Feature::create(['name'=>'DeicingAreaMarking', 'type'=>'feature', 'abbreviation'=>'DAM', 'prefix'=>'aixm', 'description'=>'A symbol or group of symbols displayed on the surface of a Deicing Area']);
        Feature::create(['name'=>'DepartureArrivalCondition', 'type'=>'object', 'abbreviation'=>'DAC', 'prefix'=>'aixm', 'description'=>'A condition which is established for a departure or an arrival']);
        Feature::create(['name'=>'DepartureLeg', 'type'=>'feature', 'abbreviation'=>'DLG', 'prefix'=>'aixm', 'description'=>'A portion of an departure procedure as defined by two consecutive significant points.']);
        Feature::create(['name'=>'DesignatedPoint', 'type'=>'feature', 'abbreviation'=>'DPN', 'order'=>5, 'prefix'=>'aixm', 'description'=>'A geographical location not marked by the site of a radio navigation aid, used in defining an ATS route, the flight path of an aircraft or for other navigation or ATS purposes.']);
        Feature::create(['name'=>'DirectFlight', 'type'=>'object', 'abbreviation'=>'DFT', 'prefix'=>'aixm', 'description'=>'A direct flight (DCT) between two significant points, outside the existing route network.']);
        Feature::create(['name'=>'DirectFlightClass', 'type'=>'object', 'abbreviation'=>'DFC', 'prefix'=>'aixm', 'description'=>'A category of direct flights (DCT), having some particular characteristics, such as a minimum length.']);
        Feature::create(['name'=>'DirectFlightSegment', 'type'=>'object', 'abbreviation'=>'DFS', 'prefix'=>'aixm', 'description'=>'A direct flight (DCT) between two specified significant points.']);
        Feature::create(['name'=>'DirectionFinder', 'type'=>'feature', 'abbreviation'=>'DFN', 'prefix'=>'aixm', 'description'=>'An electronic device used to determine the position of a radio source by means of directional antennas, which receives the strongest radio signal when it is pointing directly at the transmitter.']);
        Feature::create(['name'=>'DistanceIndication', 'type'=>'feature', 'abbreviation'=>'DIN', 'prefix'=>'aixm', 'description'=>'A distance reference from a navaid or with reference to a designated point.']);
        Feature::create(['name'=>'DME', 'type'=>'feature', 'abbreviation'=>'DME', 'prefix'=>'aixm', 'description'=>'Ultra High Frequency (UHF) ground equipment that is used in conjunction with airborne equipment to determine distance between the airborne and ground equipment.']);
        Feature::create(['name'=>'ElevatedCurve', 'type'=>'object', 'abbreviation'=>'ELC', 'prefix'=>'aixm', 'description'=>'An AIXM elevated curve derived from, which extends curve with properties that represent the vertical position (elevation, datum, accuracy).']);
        Feature::create(['name'=>'ElevatedPoint', 'type'=>'object', 'abbreviation'=>'ELP', 'prefix'=>'aixm', 'description'=>'An AIXM Point derived from GM_Point that includes properties for describing a point with elevation and vertical extent. Used in obstacles, navaids, etc.']);
        Feature::create(['name'=>'ElevatedSurface', 'type'=>'object', 'abbreviation'=>'ELS', 'prefix'=>'aixm', 'description'=>'An AIXM elevated surface derived from, which extends Surface with properties that represent the vertical position (elevation, datum, accuracy).']);
        Feature::create(['name'=>'Elevation', 'type'=>'feature', 'abbreviation'=>'ELV', 'prefix'=>'aixm', 'description'=>'A component of an MLS consisting of an SHF transmitter, and associated equipment radiating signals within a volume of airspace served by the MLS, thereby furnishing elevation information as an angular value to aircraft approaching the runway.']);
        Feature::create(['name'=>'EnRouteSegmentPoint', 'type'=>'object', 'abbreviation'=>'ERS', 'prefix'=>'aixm', 'description'=>'Indicates a point associated with a defined EnRoute segment.']);
        Feature::create(['name'=>'EquipmentChoice', 'type'=>'choice', 'abbreviation'=>'ECH', 'prefix'=>'aixm', 'description'=>'A link class that allows selecting between a radio communication channel, a navigational aid, a radar system or a special navigation station which is impacted by the RadioFrequencyArea limitation']);
        Feature::create(['name'=>'EquipmentUnavailableAdjustment', 'type'=>'object', 'abbreviation'=>'EUA', 'prefix'=>'aixm', 'description'=>'Used to describe adjustments to minimums when equipment is not available']);
        Feature::create(['name'=>'EquipmentUnavailableAdjustmentColumn', 'type'=>'object', 'abbreviation'=>'EUC', 'prefix'=>'aixm', 'description'=>'Adjustments that need to be applied in case equipment is inoperative.']);
        Feature::create(['name'=>'FASDataBlock', 'type'=>'object', 'abbreviation'=>'FDB', 'prefix'=>'aixm', 'description'=>'Final Approach Segment Data Block. The additional information about the Precision Final Segment. Most attributes describe the LPV path point record required for WAAS procedures.']);
        Feature::create(['name'=>'FinalLeg', 'type'=>'feature', 'abbreviation'=>'FLG', 'prefix'=>'aixm', 'description'=>'A type of SegmentLeg designed in accordance with the rules for final segments having the properties specific to a final approach segment..']);
        Feature::create(['name'=>'FinalProfile', 'type'=>'object', 'abbreviation'=>'FPR', 'prefix'=>'aixm', 'description'=>'The profile view of a final segment defined for an approach procedure.']);
        Feature::create(['name'=>'FireFightingService', 'type'=>'feature', 'abbreviation'=>'FFS', 'prefix'=>'aixm', 'description'=>'A kind of airport service that provides rescue and fire fighting capabilities for aircraft in emergency at and around the airport.']);
        Feature::create(['name'=>'FlightCharacteristic', 'type'=>'object', 'abbreviation'=>'FCH', 'prefix'=>'aixm', 'description'=>'A specific flight type, such as IFR/VFR, national/international, OAT/GAT, etc.']);
        Feature::create(['name'=>'FlightConditionCircumstance', 'type'=>'object', 'abbreviation'=>'FCC', 'prefix'=>'aixm', 'description'=>'Circumstance related to the elementary condition (such as departing from an aerodrome), which is used to further refine the selection of flights being affected by the restriction.']);
        Feature::create(['name'=>'FlightConditionCombination', 'type'=>'object', 'abbreviation'=>'FCM', 'prefix'=>'aixm', 'description'=>'A combination of conditions involving: 1) an operator such as \"AND\", \"OR\", \"AND NOT\", \"SEQUENCE\", \"NONE\" and 2) one or more operands, each of these being either a condition element or another combination of conditions.']);
        Feature::create(['name'=>'FlightConditionElement', 'type'=>'object', 'abbreviation'=>'FCE', 'prefix'=>'aixm', 'description'=>'An operand in a flight condition combination.']);
        Feature::create(['name'=>'FlightConditionElementChoice', 'type'=>'choice', 'abbreviation'=>'FEC', 'prefix'=>'aixm', 'description'=>'A link class that allows selecting between an elementary condition and a preceding combination of conditions, to be used as operand in a subsequent combination of flight conditions']);
        Feature::create(['name'=>'FlightRestriction', 'type'=>'feature', 'abbreviation'=>'FRS', 'prefix'=>'aixm', 'description'=>'A rule meant to regulate the use of the route network, by identifying a set of flights which fulfil a combination of elementary flow conditions and either forbidding them on a particular routing or obliging them to follow one routing out of a set of mandatory alternatives.']);
        Feature::create(['name'=>'FlightRestrictionLevel', 'type'=>'object', 'abbreviation'=>'FRL', 'prefix'=>'aixm', 'description'=>'A single level or a level band associated with a flight restriction, either condition or routing element.']);
        Feature::create(['name'=>'FlightRestrictionRoute', 'type'=>'object', 'abbreviation'=>'FRR', 'prefix'=>'aixm', 'description'=>'A sequence of routing elements (points, route portions or airspace) that must/must not appear in the specified order in the flight plan of an aircraft fulfilling the conditions of the related Flight Restriction (according to its type attribute).']);
        Feature::create(['name'=>'FlightRoutingElement', 'type'=>'object', 'abbreviation'=>'FRE', 'prefix'=>'aixm', 'description'=>'An airspace, route or point that is concerned by a specified flight restriction.']);
        Feature::create(['name'=>'FlightRoutingElementChoice', 'type'=>'choice', 'abbreviation'=>'FRC', 'prefix'=>'aixm', 'description'=>'A link class that allows selecting between an AirportHeliport, an airspace, a fix, a procedure or an aerial refuelling which is impacted by a flight restriction']);
        Feature::create(['name'=>'FloatingDockSite', 'type'=>'feature', 'abbreviation'=>'FGD', 'prefix'=>'aixm', 'description'=>'Floating facility which can serve as a mooring place for vessels or as a floating dry dock']);
        Feature::create(['name'=>'Fuel', 'type'=>'object', 'abbreviation'=>'FUL', 'prefix'=>'aixm', 'description'=>'Fuel types used for aircraft/helicopters.']);
        Feature::create(['name'=>'GeoBorder', 'type'=>'feature', 'abbreviation'=>'GBR', 'prefix'=>'aixm', 'description'=>'A physical or political border. In general, it will be the border between two countries or States but could also be a coastline, the description of the bank of an important river, or any other geographical shape which can be named and used to describe the border of an airspace. If two countries/States have more than one common border, each one will be an occurrence of this entity.']);
        Feature::create(['name'=>'Glidepath', 'type'=>'feature', 'abbreviation'=>'GPT', 'prefix'=>'aixm', 'description'=>'A component of an ILS consisting of a UHF transmitter radiating signals and providing a straight line descent path in the vertical plane containing the centre line of the runway served by the ILS, and thereby furnishing descent information down to the lowest authorized decision height or to the surface of a runway, depending on the Facility Performance Category of the ILS.']);
        Feature::create(['name'=>'GroundLightingAvailability', 'type'=>'object', 'abbreviation'=>'GLA', 'prefix'=>'aixm', 'description'=>'Information about the operational status of a ground light.']);
        Feature::create(['name'=>'GroundLightSystem', 'type'=>'feature', 'abbreviation'=>'GLS', 'prefix'=>'aixm', 'description'=>'One or more light sources located on the ground and that provide visual assistance for air and ground navigation.']);
        Feature::create(['name'=>'GroundTrafficControlService', 'type'=>'feature', 'abbreviation'=>'GTC', 'prefix'=>'aixm', 'description'=>'A kind of service that provides control and separation services, to aircraft at the airport.']);
        Feature::create(['name'=>'GuidanceLine', 'type'=>'feature', 'abbreviation'=>'GLN', 'prefix'=>'aixm', 'description'=>'A line used to guide aircraft on and between airport movement areas.']);
        Feature::create(['name'=>'GuidanceLineLightSystem', 'type'=>'feature', 'abbreviation'=>'GLL', 'prefix'=>'aixm', 'description'=>'The lighting system for the centreline guidance line.']);
        Feature::create(['name'=>'GuidanceLineMarking', 'type'=>'feature', 'abbreviation'=>'GLM', 'prefix'=>'aixm', 'description'=>'A symbol or group of symbols displayed as the guidance line.']);
        Feature::create(['name'=>'GuidanceService', 'type'=>'choice', 'abbreviation'=>'GSV', 'prefix'=>'aixm', 'description'=>'A link class that allows selecting between a navaid system, a radar system or a special navigation system to define the guidance service on which a Procedure is based']);
        Feature::create(['name'=>'HoldingAssessment', 'type'=>'feature', 'abbreviation'=>'HAS', 'prefix'=>'aixm', 'description'=>'The geometry of surfaces that define altitude levels and the structure of an area used to evaluate obstacles for determining holding patterns.']);
        Feature::create(['name'=>'HoldingPattern', 'type'=>'feature', 'abbreviation'=>'HPT', 'prefix'=>'aixm', 'description'=>'A predetermined manoeuvre which keeps an aircraft within a specified airspace while awaiting further clearance.']);
        Feature::create(['name'=>'HoldingPatternDistance', 'type'=>'object', 'abbreviation'=>'HPD', 'prefix'=>'aixm', 'description'=>'Representation of the span for a holding pattern that is defined using a distance']);
        Feature::create(['name'=>'HoldingPatternDuration', 'type'=>'object', 'abbreviation'=>'HPN', 'prefix'=>'aixm', 'description'=>'Representation of the span for a holding pattern that is defined using a time']);
        Feature::create(['name'=>'HoldingPatternLength', 'type'=>'choice', 'abbreviation'=>'HPL', 'prefix'=>'aixm', 'description'=>'Representation of a span for a holding pattern that can be defined using either duration, distance or as outbound to a Significant Point. Note: abstract types will be ignored in XML encoding.']);
        Feature::create(['name'=>'HoldingUse', 'type'=>'object', 'abbreviation'=>'HUS', 'prefix'=>'aixm', 'description'=>'[Association Class] - Describes how the holding pattern is used on a segment.']);
        Feature::create(['name'=>'InformationService', 'type'=>'feature', 'abbreviation'=>'ISV', 'prefix'=>'aixm', 'description'=>'A kind of service that consists in the provision of aeronautical, meteorological, traffic and related information to aircraft crew and other actors involved in flight operations, in flight or on the ground.']);
        Feature::create(['name'=>'InitialLeg', 'type'=>'feature', 'abbreviation'=>'ILG', 'prefix'=>'aixm', 'description'=>'A type of segmentleg designed in accordance with the rules for initial segments having the properties specific to a initial approach segment.']);
        Feature::create(['name'=>'InstrumentApproachProcedure', 'type'=>'feature', 'abbreviation'=>'IAP', 'prefix'=>'aixm', 'description'=>'A series of predetermined manoeuvres by reference to flight instruments with specified protection from obstacles from the initial approach fix, or where applicable , from the beginning of a defined arrival route to a point from which a landing can be completed and thereafter, if a landing is not completed, to a position at which holding or en route obstacle clearance criteria apply.']);
        Feature::create(['name'=>'IntermediateLeg', 'type'=>'feature', 'abbreviation'=>'INL', 'prefix'=>'aixm', 'description'=>'A type of SegmentLeg designed in accordance with the rules for intermediate segments having the properties specific to an intermediate approach segment.. The intermediate segment begins at the point where the initial approach intercepts the FAC.']);
        Feature::create(['name'=>'LandingTakeoffAreaCollection', 'type'=>'object', 'abbreviation'=>'LTA', 'prefix'=>'aixm', 'description'=>'The grouping of Landing Areas or Takeoff Areas serviced by the procedure.']);
        Feature::create(['name'=>'LightActivation', 'type'=>'object', 'abbreviation'=>'LAC', 'prefix'=>'aixm', 'description'=>'The result and the intensity of the lighting system when activated by the pilot.']);
        Feature::create(['name'=>'LightElement', 'type'=>'object', 'abbreviation'=>'LEL', 'prefix'=>'aixm', 'description'=>'An elementary light source, part of a lighting system.']);
        Feature::create(['name'=>'LightElementStatus', 'type'=>'object', 'abbreviation'=>'LES', 'prefix'=>'aixm', 'description'=>'The description of the operational status of the LightElement.']);
        Feature::create(['name'=>'LinguisticNote', 'type'=>'object', 'abbreviation'=>'LNT', 'prefix'=>'aixm', 'description'=>'The note content expressed in a specific language. As a minimum, all Notes shall be expressed in English.']);
        Feature::create(['name'=>'Localizer', 'type'=>'feature', 'abbreviation'=>'LLZ', 'prefix'=>'aixm', 'description'=>'A component of an ILS consisting of a VHF transmitter, radiating signals in the direction served by the ILS, to provide a straight line descent path in the vertical plane containing the centre line of the runway.']);
        Feature::create(['name'=>'ManoeuvringAreaAvailability', 'type'=>'object', 'abbreviation'=>'MAA', 'prefix'=>'aixm', 'description'=>'Information about the operational status of the manoeuvring area elements (runway, taxiway, TLOF, etc.)']);
        Feature::create(['name'=>'ManoeuvringAreaUsage', 'type'=>'object', 'abbreviation'=>'MAU', 'prefix'=>'aixm', 'description'=>'A rule governing the usage of the manoeuvring area element.']);
        Feature::create(['name'=>'MarkerBeacon', 'type'=>'feature', 'abbreviation'=>'MBC', 'prefix'=>'aixm', 'description'=>'A marker beacon serving to identify a particular location in space by means of a 75MHz transmitter which transmits a directional signal to be received by aircraft flying overhead.']);
        Feature::create(['name'=>'Marking', 'type'=>'feature', 'abbreviation'=>'MKG', 'prefix'=>'aixm', 'description'=>'A group of symbols displayed on an aerodrome or heliport surface in order to convey aeronautical information.']);
        Feature::create(['name'=>'MarkingBuoy', 'type'=>'feature', 'abbreviation'=>'MKB', 'prefix'=>'aixm', 'description'=>'Floating marker which is moored to the bottom at a specific known location, which is used as an aid to navigation or for other special purpose']);
        Feature::create(['name'=>'MarkingElement', 'type'=>'object', 'abbreviation'=>'MKE', 'prefix'=>'aixm', 'description'=>'A symbol displayed on an aerodrome or heliport surface.']);
        Feature::create(['name'=>'MarkingExtent', 'type'=>'choice', 'abbreviation'=>'MKX', 'prefix'=>'aixm', 'description'=>'A link class that allows selecting between a point, a curve or a surface to define the geometry of a Marking Element']);
        Feature::create(['name'=>'Meteorology', 'type'=>'object', 'abbreviation'=>'MET', 'prefix'=>'aixm', 'description'=>'A specific set of meteorological conditions.']);
        Feature::create(['name'=>'Minima', 'type'=>'object', 'abbreviation'=>'MIN', 'prefix'=>'aixm', 'description'=>'Vertical and horizontal visual minimums for a procedure segment conditions such as aircraft category, navigation equipment usage, procedure type, altimeter, etc.']);
        Feature::create(['name'=>'MissedApproachGroup', 'type'=>'object', 'abbreviation'=>'MAP', 'prefix'=>'aixm', 'description'=>'Properties of the Missed Approach']);
        Feature::create(['name'=>'MissedApproachLeg', 'type'=>'feature', 'abbreviation'=>'MAL', 'prefix'=>'aixm', 'description'=>'A type of SegmentLeg designed in accordance with the rules for missed approach segments having the properties specific to a missed approach segment.. The missed approach segment begins at DA and ends at the clearance limit.']);
        Feature::create(['name'=>'Navaid', 'type'=>'feature', 'abbreviation'=>'NAV', 'order'=>6, 'prefix'=>'aixm', 'description'=>'A service providing guidance information or position data for the efficient and safe operation of aircraft supported by one or more radio navigation aids.']);
        Feature::create(['name'=>'NavaidComponent', 'type'=>'object', 'abbreviation'=>'NCM', 'prefix'=>'aixm', 'description'=>'[Association Class] - Indicates navigation use of a NavaidEquipment as a component of the navigation service provided by a Navaid. For example the DME NavaidEquipment is a NavaidComponent of an ILS system. The DME may be collocated with the Localizer and the DME may provide the navigable location for the Navaid service.']);
        Feature::create(['name'=>'NavaidEquipment', 'type'=>'feature', 'abbreviation'=>'NEQ', 'prefix'=>'aixm', 'description'=>'A physical navaid equipment like VOR, DME, localizer, TACAN, etc..']);
        Feature::create(['name'=>'NavaidEquipmentDistance', 'type'=>'object', 'abbreviation'=>'NED', 'prefix'=>'aixm', 'description'=>'[Association Class] - Captures the distances between various Runway Centreline Points and Navaid Equipment.']);
        Feature::create(['name'=>'NavaidEquipmentMonitoring', 'type'=>'object', 'abbreviation'=>'NEM', 'prefix'=>'aixm', 'description'=>'Navaid equipment monitoring information.']);
        Feature::create(['name'=>'NavaidOperationalStatus', 'type'=>'object', 'abbreviation'=>'NOS', 'prefix'=>'aixm', 'description'=>'Navaid operational status information.']);
        Feature::create(['name'=>'NavigationArea', 'type'=>'feature', 'abbreviation'=>'NAA', 'prefix'=>'aixm', 'description'=>'An area specified by sectors with altitude or procedure descent gradient limitations for omnidirectional departures or Pilot navigation area.']);
        Feature::create(['name'=>'NavigationAreaRestriction', 'type'=>'feature', 'abbreviation'=>'NAN', 'prefix'=>'aixm', 'description'=>'Areas that are restricted from use for a procedure. Example is restricted areas defined for an omnidirectional departure.']);
        Feature::create(['name'=>'NavigationAreaSector', 'type'=>'object', 'abbreviation'=>'NAR', 'prefix'=>'aixm', 'description'=>'Subdivision of a sector to allow for different altitudes or gradients.']);
        Feature::create(['name'=>'NavigationSystemCheckpoint', 'type'=>'feature', 'abbreviation'=>'NSC', 'prefix'=>'aixm', 'description'=>'A point established and marked on the surface of an aerodrome allowing the checking of a navigation system (like VOR, GNSS, etc.) or initialisation of an inertial navigation system.']);
        Feature::create(['name'=>'NDB', 'type'=>'feature', 'abbreviation'=>'NDB', 'prefix'=>'aixm', 'description'=>'A Non-directional radio beacon. A low or medium frequency radio beacon which transmits signals whereby the pilot of an aircraft properly equipped can determine bearings and \'home in\' on the station.']);
        Feature::create(['name'=>'Nitrogen', 'type'=>'object', 'abbreviation'=>'NTG', 'prefix'=>'aixm', 'description'=>'NITROGEN supplies in aviation.']);
        Feature::create(['name'=>'NonMovementArea', 'type'=>'feature', 'abbreviation'=>'NMA', 'prefix'=>'aixm', 'description'=>'Area where aircraft cannot be seen by a control tower and therefore are restricted to move']);
        Feature::create(['name'=>'Note', 'type'=>'object', 'abbreviation'=>'NTE', 'prefix'=>'aixm', 'description'=>'A general text note for a feature or for one of its properties.']);
        Feature::create(['name'=>'ObstacleArea', 'type'=>'feature', 'abbreviation'=>'OAR', 'prefix'=>'aixm', 'description'=>'An area defined by ICAO for the purpose of collecting obstacle data in electronic format, as necessary to satisfy requirements of air navigation systems or functions.']);
        Feature::create(['name'=>'ObstacleAreaOrigin', 'type'=>'choice', 'abbreviation'=>'OAO', 'prefix'=>'aixm', 'description'=>'A link class that allows selecting the feature for which the Obstacle Area has been defined']);
        Feature::create(['name'=>'ObstacleAssessmentArea', 'type'=>'object', 'abbreviation'=>'OSS', 'prefix'=>'aixm', 'description'=>'The geometry of surfaces used to define the altitude the length of a segment, holding pattern, etc., in function of the obstructions located in the area.']);
        Feature::create(['name'=>'ObstaclePlacement', 'type'=>'object', 'abbreviation'=>'OPL', 'prefix'=>'aixm', 'description'=>'Provides the location relative to']);
        Feature::create(['name'=>'Obstruction', 'type'=>'object', 'abbreviation'=>'OBN', 'prefix'=>'aixm', 'description'=>'[FAA 8260.3] The highest airspace, obstacle or terrain relative to a prescribed plane within a specified area. NOTE: In precision approach procedures where obstacles penetrate the approach surface, the controlling obstacle is the one which results in the requirement for the highest decision height (DH).']);
        Feature::create(['name'=>'Oil', 'type'=>'object', 'abbreviation'=>'OIL', 'prefix'=>'aixm', 'description'=>'Oil types used for aircraft/helicopters.']);
        Feature::create(['name'=>'OnlineContact', 'type'=>'object', 'abbreviation'=>'OCN', 'prefix'=>'aixm', 'description'=>'On-line or Network information that can be used to contact the individual or organisation, including eMail address and web site page.']);
        Feature::create(['name'=>'OrganisationAuthority', 'type'=>'feature', 'abbreviation'=>'ORG', 'order'=>1, 'prefix'=>'aixm', 'description'=>'A feature used to model various Organisations and Authorities. For example: ATS Organisations, Aircraft Operating Agencies, States, Groups of States, etc.']);
        Feature::create(['name'=>'OrganisationAuthorityAssociation', 'type'=>'object', 'abbreviation'=>'OAS', 'prefix'=>'aixm', 'description'=>'[Association Class] - This entity type serves to realise the different \'two-way associations\' which may exist between \'organisations/authorities\' of the same and/or different types. Example: - an organisation/authority/agency may consist of any number of other organisations/authorities/agencies;']);
        Feature::create(['name'=>'Oxygen', 'type'=>'object', 'abbreviation'=>'OXG', 'prefix'=>'aixm', 'description'=>'Oxygen supplies used in aviation.']);
        Feature::create(['name'=>'PassengerLoadingBridge', 'type'=>'feature', 'abbreviation'=>'PLB', 'prefix'=>'aixm', 'description'=>'Bridge for loading/unloading access to airplanes for passengers and crew.']);
        Feature::create(['name'=>'PassengerService', 'type'=>'feature', 'abbreviation'=>'PSV', 'prefix'=>'aixm', 'description'=>'Passenger services and facilities available at an aerodrome/heliport (like medical facilities) or in the surrounding area (hotels in city etc.).']);
        Feature::create(['name'=>'PilotControlledLighting', 'type'=>'feature', 'abbreviation'=>'PCG', 'prefix'=>'aixm', 'description'=>'Service providing airborne control of lights by keying the aircraft\'s microphone. Often available at locations without specified hours for lighting and where there is no control tower or Flight Service Station (FSS); or when the tower or FSS is closed (locations with part-time tower or FSS).']);
        Feature::create(['name'=>'Point', 'type'=>'object', 'abbreviation'=>'PNT', 'prefix'=>'aixm', 'description'=>'AIXM Point containing horizontal accuracy data. In AIXM horizontal accuracy is considered a property of the geometry.']);
        Feature::create(['name'=>'PointReference', 'type'=>'object', 'abbreviation'=>'PRF', 'prefix'=>'aixm', 'description'=>'Defines the location of a designated point using a combination of angles and distances based on the guidance service. The set of angles and distances must not under specify the location. The indications that are part of the PointReference must locate the same designated point.']);
        Feature::create(['name'=>'PostalAddress', 'type'=>'object', 'abbreviation'=>'PAD', 'prefix'=>'aixm', 'description'=>'Physical address at which the organization or individual may be contacted. Derived from ISO19115-2003']);
        Feature::create(['name'=>'PrecisionApproachRadar', 'type'=>'feature', 'abbreviation'=>'PAR', 'prefix'=>'aixm', 'description'=>'Primary radar equipment used to determine the position of an aircraft during final approach, in terms of lateral and vertical deviations relative to a nominal approach path, and in range relative to touchdown.']);
        Feature::create(['name'=>'PrimarySurveillanceRadar', 'type'=>'feature', 'abbreviation'=>'PSR', 'prefix'=>'aixm', 'description'=>'Primary Surveillance Radar is a radar system which detects the position of all the objects within its coverage that can reflect its transmitted radio signals.']);
        Feature::create(['name'=>'Procedure', 'type'=>'feature', 'abbreviation'=>'PRC', 'prefix'=>'aixm', 'description'=>'A series of predetermined manoeuvres with specified protection from obstacles.']);
        Feature::create(['name'=>'ProcedureAvailability', 'type'=>'object', 'abbreviation'=>'PAV', 'prefix'=>'aixm', 'description'=>'Information about the status of the procedure for flight planning/operations.']);
        Feature::create(['name'=>'ProcedureDME', 'type'=>'feature', 'abbreviation'=>'PDM', 'prefix'=>'aixm', 'description'=>'DME facilities that are used for a particular segments for DME/DME navigation.']);
        Feature::create(['name'=>'ProcedureTransition', 'type'=>'object', 'abbreviation'=>'PTR', 'prefix'=>'aixm', 'description'=>'A group of consecutive segments that are part of a branch on an approach procedure, SID or STAR.']);
        Feature::create(['name'=>'ProcedureTransitionLeg', 'type'=>'object', 'abbreviation'=>'PTL', 'prefix'=>'aixm', 'description'=>'[Association Class] - Characterises a SegmentLeg which is part of a Procedure Transition']);
        Feature::create(['name'=>'PropertiesWithSchedule', 'type'=>'object', 'abbreviation'=>'PWS', 'prefix'=>'aixm', 'description'=>'An abstract class that is used for associating a group of feature properties with a repetitive time period, occurring cyclically inside the validity of the Feature Timeslice, during which these properties have specific values.']);
        Feature::create(['name'=>'RadarComponent', 'type'=>'object', 'abbreviation'=>'RCM', 'prefix'=>'aixm', 'description'=>'[Association Class] - Indicates radar use of a RadarEquipment as a component of the radar service provided by a RadarSystem.']);
        Feature::create(['name'=>'RadarEquipment', 'type'=>'feature', 'abbreviation'=>'REQ', 'prefix'=>'aixm', 'description'=>'Physical radar equipment like PAR, ARSR, ASR, SECRA, etc..']);
        Feature::create(['name'=>'RadarSystem', 'type'=>'feature', 'abbreviation'=>'RST', 'prefix'=>'aixm', 'description'=>'One or more Radar Equipment providing radar services.']);
        Feature::create(['name'=>'RadioCommunicationChannel', 'type'=>'feature', 'abbreviation'=>'RCC', 'prefix'=>'aixm', 'description'=>'A radio frequency band of sufficient width and associated identification data used for one- or two-way communication from or to a transmitter on the ground or in the air.']);
        Feature::create(['name'=>'RadioCommunicationOperationalStatus', 'type'=>'object', 'abbreviation'=>'RCO', 'prefix'=>'aixm', 'description'=>'Radio communication channel operational status information.']);
        Feature::create(['name'=>'RadioFrequencyArea', 'type'=>'feature', 'abbreviation'=>'RFA', 'prefix'=>'aixm', 'description'=>'A limitation, such as coverage, usability, etc., of a navaid equipment or service frequency']);
        Feature::create(['name'=>'Reflector', 'type'=>'object', 'abbreviation'=>'RFL', 'prefix'=>'aixm', 'description'=>'Describes the various reflectors used with Precision Approach Radars.']);
        Feature::create(['name'=>'Ridge', 'type'=>'object', 'abbreviation'=>'RDG', 'prefix'=>'aixm', 'description'=>'Describes ridges of deposited material (such as a snow-bank) to the left or right of the runway (relative to the runway direction with the lowest designation number).']);
        Feature::create(['name'=>'Road', 'type'=>'feature', 'abbreviation'=>'ROA', 'prefix'=>'aixm', 'description'=>'An established surface route on the aerodrome meant for the exclusive use of authorized vehicles and personnel.']);
        Feature::create(['name'=>'Route', 'type'=>'feature', 'abbreviation'=>'RTE', 'order'=>3, 'prefix'=>'aixm', 'description'=>'A specified route designed for channelling the flow of traffic as necessary for the provision of air traffic services, from the end of the take-off and initial climb phase to the commencement of the approach and landing phase.']);
        Feature::create(['name'=>'RouteAvailability', 'type'=>'object', 'abbreviation'=>'RAV', 'prefix'=>'aixm', 'description'=>'Information about the operational availability of a route.']);
        Feature::create(['name'=>'RouteDME', 'type'=>'feature', 'abbreviation'=>'RDM', 'prefix'=>'aixm', 'description'=>'DME facilities that are used for a particular route for DME/DME navigation.']);
        Feature::create(['name'=>'RoutePortion', 'type'=>'object', 'abbreviation'=>'RPN', 'prefix'=>'aixm', 'description'=>'A group of two or more consecutive segments of the same route, which have the usage and/or the same flight restrictions.']);
        Feature::create(['name'=>'RouteSegment', 'type'=>'feature', 'abbreviation'=>'RSG', 'prefix'=>'aixm', 'description'=>'A portion of a route to be flown usually without an intermediate stop, as defined by two consecutive significant points.']);
        Feature::create(['name'=>'RulesProcedures', 'type'=>'feature', 'abbreviation'=>'RUP', 'prefix'=>'aixm', 'description'=>'The definition of an instruction or regulation that needs to be considered by personnel involved in flight operations in relation with an airport/heliport or an airspace.']);
        Feature::create(['name'=>'Runway', 'type'=>'feature', 'abbreviation'=>'RWY', 'prefix'=>'aixm', 'description'=>'A defined rectangular area on a land aerodrome/heliport prepared for the landing and take-off of aircraft. Note: this includes the concept of Final Approach and Take-Off Area (FATO) for helicopters.']);
        Feature::create(['name'=>'RunwayBlastPad', 'type'=>'feature', 'abbreviation'=>'RBP', 'prefix'=>'aixm', 'description'=>'Specially prepared surface placed adjacent to the end of a runway to eliminate the erosive affect of the high wind forces produced by airplanes at the beginning of their takeoff rolls.']);
        Feature::create(['name'=>'RunwayCentrelinePoint', 'type'=>'feature', 'abbreviation'=>'RCP', 'prefix'=>'aixm', 'description'=>'An operationally significant position on the centre line of a runway direction. A typical example is the runway threshold.']);
        Feature::create(['name'=>'RunwayContamination', 'type'=>'object', 'abbreviation'=>'RCT', 'prefix'=>'aixm', 'description'=>'The presence or removal of hazardous conditions due to snow, ice, slush, water, etc. on the runway surface.']);
        Feature::create(['name'=>'RunwayDeclaredDistance', 'type'=>'object', 'abbreviation'=>'RDD', 'prefix'=>'aixm', 'description'=>'A conventional operational distance declared for a runway direction. For example, TORA, TODA, LDA, ASDA.']);
        Feature::create(['name'=>'RunwayDeclaredDistanceValue', 'type'=>'object', 'abbreviation'=>'RDV', 'prefix'=>'aixm', 'description'=>'The value of a conventional operational distance declared for a runway direction.']);
        Feature::create(['name'=>'RunwayDirection', 'type'=>'feature', 'abbreviation'=>'RDN', 'prefix'=>'aixm', 'description'=>'One of the two landing and take-off directions of a runway for which attributes like TORA, TODA, LDA, etc. may be defined.']);
        Feature::create(['name'=>'RunwayDirectionLightSystem', 'type'=>'feature', 'abbreviation'=>'RLS', 'prefix'=>'aixm', 'description'=>'The lighting system provided for a landing and take-off direction, including the stopway lights.']);
        Feature::create(['name'=>'RunwayElement', 'type'=>'feature', 'abbreviation'=>'REL', 'prefix'=>'aixm', 'description'=>'Runway element may consist of one ore more polygons not defined as other portions of the runway class.']);
        Feature::create(['name'=>'RunwayMarking', 'type'=>'feature', 'abbreviation'=>'RMG', 'prefix'=>'aixm', 'description'=>'A symbol or group of symbols displayed on the surface of the runway.']);
        Feature::create(['name'=>'RunwayProtectArea', 'type'=>'feature', 'abbreviation'=>'RPA', 'prefix'=>'aixm', 'description'=>'An area situated in the vicinity of a runway or provided to protect aircraft during manoeuvring, take-off and landing operations.']);
        Feature::create(['name'=>'RunwayProtectAreaLightSystem', 'type'=>'feature', 'abbreviation'=>'RPL', 'prefix'=>'aixm', 'description'=>'The lighting for the runway project area.']);
        Feature::create(['name'=>'RunwaySectionContamination', 'type'=>'object', 'abbreviation'=>'RSC', 'prefix'=>'aixm', 'description'=>'The presence or removal of hazardous conditions due to snow, ice, slush, water, etc. on a section of the runway surface.']);
        Feature::create(['name'=>'RunwayVisualRange', 'type'=>'feature', 'abbreviation'=>'RVR', 'prefix'=>'aixm', 'description'=>'A meteorological equipment providing information about the distance over which the pilot of an aircraft on the centre line of a runway can see the runway surface markings or the lights delineating the runway or identifying its centre line.']);
        Feature::create(['name'=>'SafeAltitudeArea', 'type'=>'feature', 'abbreviation'=>'SAA', 'prefix'=>'aixm', 'description'=>'A set of Minimum Sector Altitudes which completely describe an area centred on a significant point, usually contained within a sector of 46km (25NM) radius.']);
        Feature::create(['name'=>'SafeAltitudeAreaSector', 'type'=>'object', 'abbreviation'=>'SAS', 'prefix'=>'aixm', 'description'=>'Subdivision of the MSA to allow for lower altitudes.']);
        Feature::create(['name'=>'SDF', 'type'=>'feature', 'abbreviation'=>'SDF', 'prefix'=>'aixm', 'description'=>'Simplified Directional Facility (SDF) provides a final approach course similar to that of the ILS localizer although is not as precise as Localizer. It does not provide glide slope information. The SDF transmits signals within the range of 108.10 to 111.95 MHz. The approach techniques and procedures used in an SDF instrument approach are essentially the same as those employed in executing a standard localizer approach except the SDF course may not be aligned with the runway and the course may be wider, resulting in less precision. Usable off-course indications are limited to 35 degrees either side of the course centreline. Instrument indications received beyond 35 degrees should be disregarded. This angle is generally not more than 3 degrees. The SDF signal is fixed at either 6 degrees or 12 degrees as necessary to provide maximum flyability and optimum course quality.']);
        Feature::create(['name'=>'SeaplaneLandingArea', 'type'=>'feature', 'abbreviation'=>'SLA', 'prefix'=>'aixm', 'description'=>'Area specifically designated for take-offs and landings of seaplanes']);
        Feature::create(['name'=>'SeaplaneRampSite', 'type'=>'feature', 'abbreviation'=>'SPR', 'prefix'=>'aixm', 'description'=>'Ramps specifically designed to transit seaplanes from land to water and vice versa']);
        Feature::create(['name'=>'SearchRescueService', 'type'=>'feature', 'abbreviation'=>'SRE', 'prefix'=>'aixm', 'description'=>'The performance of distress monitoring, communication, coordination and search and rescue functions, initial medical assistance or medical evacuation, through the use of public and private resources, including cooperating aircraft, vessels and other craft and installations.']);
        Feature::create(['name'=>'SecondarySurveillanceRadar', 'type'=>'feature', 'abbreviation'=>'SSV', 'prefix'=>'aixm', 'description'=>'Secondary Surveillance Radar (SSR aka Secondary Radar (SECRA)) is a radar system in which the object to be detected is fitted with the cooperative equipment in the form of a radio receiver/transmitter (transponder). Radar pulses transmitted from the searching transmitter/receiver (interrogator) site are received in the cooperative equipment and used to trigger a distinctive transmission from the transponder. This reply transmission, rather than a reflected signal, is then received back at the transmitter/receiver site for processing and display at an air traffic control facility.']);
        Feature::create(['name'=>'SectorDesign', 'type'=>'object', 'abbreviation'=>'SDN', 'prefix'=>'aixm', 'description'=>'Design criteria used for the NavigationAreaSector.']);
        Feature::create(['name'=>'SegmentLeg', 'type'=>'feature', 'abbreviation'=>'SLG', 'prefix'=>'aixm', 'description'=>'A portion of a procedure as defined by two consecutive significant points.']);
        Feature::create(['name'=>'SegmentPoint', 'type'=>'object', 'abbreviation'=>'SPT', 'prefix'=>'aixm', 'description'=>'Indicates a point associated with a defined segment.']);
        Feature::create(['name'=>'Service', 'type'=>'feature', 'abbreviation'=>'SER', 'prefix'=>'aixm', 'description'=>'The provision of tangible goods, information, instructions, guidance, etc. to pilots, flights, aircraft operators and other personnel and institutions concerned with flight operations.']);
        Feature::create(['name'=>'ServiceOperationalStatus', 'type'=>'object', 'abbreviation'=>'SOS', 'prefix'=>'aixm', 'description'=>'Service operational status.']);
        Feature::create(['name'=>'SignificantPoint', 'type'=>'choice', 'abbreviation'=>'SPN', 'prefix'=>'aixm', 'description'=>'A link class that allows selecting between a navaid system, a runway point, an airport reference point, an aiming point or a fix designated point. SignificantPoint accounts for a specified geographical location used to define an ATS route, the flight path of an aircraft or for other navigation/ATS purposes.']);
        Feature::create(['name'=>'SignificantPointInAirspace', 'type'=>'feature', 'abbreviation'=>'SPA', 'prefix'=>'aixm', 'description'=>'A significant point\'s use and relative location to an airspace.']);
        Feature::create(['name'=>'SpecialDate', 'type'=>'feature', 'abbreviation'=>'SPD', 'prefix'=>'aixm', 'description'=>'A calendar date that has a special meaning for a particular State/organisation and which may be referred to in the description of the schedules associated with various aeronautical features.']);
        Feature::create(['name'=>'SpecialNavigationStation', 'type'=>'feature', 'abbreviation'=>'SNS', 'prefix'=>'aixm', 'description'=>'A land based station of a special navigation system.']);
        Feature::create(['name'=>'SpecialNavigationStationStatus', 'type'=>'object', 'abbreviation'=>'SNT', 'prefix'=>'aixm', 'description'=>'Special Navigation Station Status information.']);
        Feature::create(['name'=>'SpecialNavigationSystem', 'type'=>'feature', 'abbreviation'=>'SNY', 'prefix'=>'aixm', 'description'=>'A wide area (worldwide) navigation system based on a chain of land stations or a satellite constellation providing radio frequency signals which can be used by airborne equipment to determine at least, the aircrafts two-dimensional position or, depending on the capability of the system, the three-dimensional position.']);
        Feature::create(['name'=>'StandardInstrumentArrival', 'type'=>'feature', 'abbreviation'=>'SIA', 'prefix'=>'aixm', 'description'=>'A designated instrument flight rule (IFR) arrival route linking a significant point, normally on an ATS route, with a point from which a published instrument approach procedure can be commenced.']);
        Feature::create(['name'=>'StandardInstrumentDeparture', 'type'=>'feature', 'abbreviation'=>'SID', 'prefix'=>'aixm', 'description'=>'A designated instrument flight rule (IFR) departure route linking the aerodrome or a specific runway of the aerodrome with a specified significant point, normally on a designated ATS route, at which the en-route phase of a flight commences.']);
        Feature::create(['name'=>'StandardLevel', 'type'=>'object', 'abbreviation'=>'SLL', 'prefix'=>'aixm', 'description'=>'A specified cruising level, part of a column within a table of discrete cruising levels used by General Air Traffic.']);
        Feature::create(['name'=>'StandardLevelColumn', 'type'=>'feature', 'abbreviation'=>'SLC', 'prefix'=>'aixm', 'description'=>'A column of consecutive cruising levels within a standard level table.']);
        Feature::create(['name'=>'StandardLevelSector', 'type'=>'feature', 'abbreviation'=>'SLS', 'prefix'=>'aixm', 'description'=>'The general rule by which standard level columns are used in a national airspace or within a region. For example, in France, IFR odd RVSM levels are used between 0 and 179 degrees.']);
        Feature::create(['name'=>'StandardLevelTable', 'type'=>'feature', 'abbreviation'=>'SLB', 'prefix'=>'aixm', 'description'=>'A table of consecutive cruising levels described under vertical separation criteria limited by an upper and lower level and used by General Air Traffic.']);
        Feature::create(['name'=>'StandMarking', 'type'=>'feature', 'abbreviation'=>'SMK', 'prefix'=>'aixm', 'description'=>'A symbol or group of symbols displayed on the surface of the Aircraft Stand.']);
        Feature::create(['name'=>'Surface', 'type'=>'object', 'abbreviation'=>'SFC', 'prefix'=>'aixm', 'description'=>'An AIXM surface derived from GM_Surface and extended to include Horizontal Accuracy Properties']);
        Feature::create(['name'=>'SurfaceCharacteristics', 'type'=>'object', 'abbreviation'=>'SCS', 'prefix'=>'aixm', 'description'=>'An entity grouping together the attributes that model characteristics of an airport surface, such as strength, material, etc.']);
        Feature::create(['name'=>'SurfaceContamination', 'type'=>'object', 'abbreviation'=>'SCN', 'prefix'=>'aixm', 'description'=>'Presence or removal of hazardous conditions on movement areas due to snow, ice, slush, water.']);
        Feature::create(['name'=>'SurfaceContaminationLayer', 'type'=>'object', 'abbreviation'=>'SCL', 'prefix'=>'aixm', 'description'=>'An operationally significant contaminant of homogeneous type such as snow, ice, slush, water, sand, etc., which is present on a large surface of the airport/heliport area.']);
        Feature::create(['name'=>'SurveillanceGroundStation', 'type'=>'object', 'abbreviation'=>'SGS', 'prefix'=>'aixm', 'description'=>'[Association Class] - Characterizes the ground station where the Radar Scope is utilized.']);
        Feature::create(['name'=>'SurveillanceRadar', 'type'=>'feature', 'abbreviation'=>'SRD', 'prefix'=>'aixm', 'description'=>'An abstract class gathering the properties that are common to both Primary and Secondary Surveillance Radar.']);
        Feature::create(['name'=>'SurveyControlPoint', 'type'=>'feature', 'abbreviation'=>'SCP', 'prefix'=>'aixm', 'description'=>'A monumented survey control point']);
        Feature::create(['name'=>'TACAN', 'type'=>'feature', 'abbreviation'=>'TCN', 'prefix'=>'aixm', 'description'=>'A UHF Tactical Air Navigation beacon. A navigation system developed by military and naval forces providing, as far as the navigating pilot is concerned and for suitably equipped aircraft, the same indication as a VOR/DME system.']);
        Feature::create(['name'=>'TaxiHoldingPosition', 'type'=>'feature', 'abbreviation'=>'THP', 'prefix'=>'aixm', 'description'=>'A designated position intended for traffic control at which taxiing aircraft and vehicles shall stop and hold until further cleared to proceed, when so instructed by the aerodrome control tower.']);
        Feature::create(['name'=>'TaxiHoldingPositionLightSystem', 'type'=>'feature', 'abbreviation'=>'THL', 'prefix'=>'aixm', 'description'=>'Lighting system for a taxiway hold position.']);
        Feature::create(['name'=>'TaxiHoldingPositionMarking', 'type'=>'feature', 'abbreviation'=>'THM', 'prefix'=>'aixm', 'description'=>'A symbol or group of symbols displayed on the surface of a Taxiway indicating the location of the TaxiHoldingPosition.']);
        Feature::create(['name'=>'Taxiway', 'type'=>'feature', 'abbreviation'=>'TWY', 'prefix'=>'aixm', 'description'=>'A defined path at an aerodrome/heliport established for the taxiing of aircraft/helicopters and intended to provide a link between one part of the aerodrome and another, including aircraft/helicopter stand taxi-lines, apron taxiways, rapid exit taxiways, air taxiways etc..']);
        Feature::create(['name'=>'TaxiwayContamination', 'type'=>'object', 'abbreviation'=>'TWC', 'prefix'=>'aixm', 'description'=>'The presence or removal of hazardous conditions due to snow, ice, slush, water, etc. on the taxiway surface.']);
        Feature::create(['name'=>'TaxiwayElement', 'type'=>'feature', 'abbreviation'=>'TWE', 'prefix'=>'aixm', 'description'=>'Part of a Taxiway']);
        Feature::create(['name'=>'TaxiwayLightSystem', 'type'=>'feature', 'abbreviation'=>'TWL', 'prefix'=>'aixm', 'description'=>'The lighting system provided for a taxiway at an aerodrome/heliport.']);
        Feature::create(['name'=>'TaxiwayMarking', 'type'=>'feature', 'abbreviation'=>'TWM', 'prefix'=>'aixm', 'description'=>'A symbol or group of symbols displayed on the surface of the taxiway.']);
        Feature::create(['name'=>'TelephoneContact', 'type'=>'object', 'abbreviation'=>'TCT', 'prefix'=>'aixm', 'description'=>'Telephone numbers at which the organisation or individual may be contacted. From ISO19115-2003']);
        Feature::create(['name'=>'TerminalArrivalArea', 'type'=>'feature', 'abbreviation'=>'TAA', 'prefix'=>'aixm', 'description'=>'The lowest altitude that will provide a minimum clearance of 300 metres (1000 feet) above all objects located in an arc of a circle defined by a 46 kilometre (25 nautical mile) radius centred on the initial approach fix (IAF), or where there is no IAF then centred on the intermediate approach fix (IF), delimited by straight lines joining the extremity of the arc to the IAF/IF.']);
        Feature::create(['name'=>'TerminalArrivalAreaSector', 'type'=>'object', 'abbreviation'=>'TAS', 'prefix'=>'aixm', 'description'=>'Subdivision of the TAA to allow for lower altitudes. The lowest altitude will provide a minimum clearance of 300m (1000ft) above all objects located in the sector.']);
        Feature::create(['name'=>'TerminalSegmentPoint', 'type'=>'object', 'abbreviation'=>'TSP', 'prefix'=>'aixm', 'description'=>'Indicates a point or a condition associated with a defined segment leg.']);
        Feature::create(['name'=>'Timesheet', 'type'=>'object', 'abbreviation'=>'TSH', 'prefix'=>'aixm', 'description'=>'The definition of a single time interval, that occurs repeatedly as part of a schedule.']);
        Feature::create(['name'=>'TouchDownLiftOff', 'type'=>'feature', 'abbreviation'=>'TLA', 'prefix'=>'aixm', 'description'=>'A load bearing area on which a helicopter may touch down or lift-off.']);
        Feature::create(['name'=>'TouchDownLiftOffContamination', 'type'=>'object', 'abbreviation'=>'TLC', 'prefix'=>'aixm', 'description'=>'The presence or removal of hazardous conditions due to snow, ice, slush, water, etc. on the TLOF surface.']);
        Feature::create(['name'=>'TouchDownLiftOffLightSystem', 'type'=>'feature', 'abbreviation'=>'TLS', 'prefix'=>'aixm', 'description'=>'The lighting system provided for a TLOF surface at an aerodrome/heliport.']);
        Feature::create(['name'=>'TouchDownLiftOffMarking', 'type'=>'feature', 'abbreviation'=>'TLM', 'prefix'=>'aixm', 'description'=>'A symbol or group of symbols displayed on the surface of the touch down and lift-off area.']);
        Feature::create(['name'=>'TouchDownLiftOffSafeArea', 'type'=>'feature', 'abbreviation'=>'TSA', 'prefix'=>'aixm', 'description'=>'An obstacle free zone area situated in the vicinity of a touch down and lift-off area, provided to protect helicopters during manoeuvring, take-off and/or landing operations.']);
        Feature::create(['name'=>'TrafficSeparationService', 'type'=>'feature', 'abbreviation'=>'TSS', 'prefix'=>'aixm', 'description'=>'A kind of service that provides control and separation services, to aircraft in the air and on the ground.']);
        Feature::create(['name'=>'Unit', 'type'=>'feature', 'abbreviation'=>'UNI', 'prefix'=>'aixm', 'description'=>'A generic term meaning variously all types of \'units\' providing all types of services. This includes particularly Air Traffic Management (ATM) Units but also units which are not express verbs included in ATM such as SAR, MET, COM etc.']);
        Feature::create(['name'=>'UnitAvailability', 'type'=>'object', 'abbreviation'=>'UAB', 'prefix'=>'aixm', 'description'=>'Unit availability information.']);
        Feature::create(['name'=>'UnitDependency', 'type'=>'object', 'abbreviation'=>'UDP', 'prefix'=>'aixm', 'description'=>'[Association Class] - This association class describes the operational/functional relation that exists between a Unit and a RelatedUnit.']);
        Feature::create(['name'=>'UnplannedHolding', 'type'=>'feature', 'abbreviation'=>'UHG', 'prefix'=>'aixm', 'description'=>'First time a point is established in Enroute environment at a navaid, all radials are checked for holding; 360 deg. (A circle is used for assessment) If the point is a designated point, holding along the course guidance radial is checked. If no restrictions are found, holding on any radial (unplanned) is approved. If restrictions are found, holding restrictions may be noted or holding may be restricted to defined holding patterns.']);
        Feature::create(['name'=>'UsageCondition', 'type'=>'object', 'abbreviation'=>'UCN', 'prefix'=>'aixm', 'description'=>'A rule governing the usage of an Airport/Heliport or of one of its surfaces.']);
        Feature::create(['name'=>'VerticalStructure', 'type'=>'feature', 'abbreviation'=>'VST', 'prefix'=>'aixm', 'description'=>'All fixed (whether temporary or permanent) and mobile objects, or parts thereof that extend above the surface of the Earth. Those vertical structures that are located on an area intended for the surface movement of aircraft or that extend above a defined surface intended to protect aircraft in flight are considered obstacles.']);
        Feature::create(['name'=>'VerticalStructureLightingStatus', 'type'=>'object', 'abbreviation'=>'VSL', 'prefix'=>'aixm', 'description'=>'The description of the operational status of the Vertical Structure lighting.']);
        Feature::create(['name'=>'VerticalStructurePart', 'type'=>'object', 'abbreviation'=>'VSP', 'prefix'=>'aixm', 'description'=>'A part of the vertical structure that can be represented as point, line or polygon with vertical extent.']);
        Feature::create(['name'=>'VerticalStructurePartGeometry', 'type'=>'choice', 'abbreviation'=>'VSG', 'prefix'=>'aixm', 'description'=>'A link class that allows selecting between the three different possibilities for describing the horizontal projection of an obstacle: point, line or polygon']);
        Feature::create(['name'=>'VisualGlideSlopeIndicator', 'type'=>'feature', 'abbreviation'=>'VGI', 'prefix'=>'aixm', 'description'=>'A visual guidance system that provides "below/above glidepath" information to an aircraft executing an approach to a specific runway direction.']);
        Feature::create(['name'=>'VOR', 'type'=>'feature', 'abbreviation'=>'VOR', 'prefix'=>'aixm', 'description'=>'A VHF omnidirectional radio range beacon. A short-range, very-high-frequency omnidirectional beacon which provides an indication in the aircraft of the bearing of the beacon, or left-right track indication.']);
        Feature::create(['name'=>'WorkArea', 'type'=>'feature', 'abbreviation'=>'WAR', 'prefix'=>'aixm', 'description'=>'Part of a movement area under construction']);
        Feature::create(['name'=>'WorkareaActivity', 'type'=>'object', 'abbreviation'=>'WAA', 'prefix'=>'aixm', 'description'=>'Work area activity information.']);
    }
}
